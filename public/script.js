// =================================================================
// script.js - –û–ù–û–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø –ó GET, POST, DELETE —Ç–∞ –ê–í–¢–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–Ñ–Æ
// =================================================================

// *** –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –¢–ê ID –ï–õ–ï–ú–ï–ù–¢–Ü–í ***
const API_ENDPOINT = 'https://6v0qdpjqq3.execute-api.us-east-1.amazonaws.com/Staging/events'; 

const EVENT_LIST_CONTAINER = document.getElementById('event-list-container');
const CREATE_EVENT_FORM = document.getElementById('create-event-form');
const EVENT_NAME_INPUT = document.getElementById('event-name-input');


// -----------------------------------------------------------------
// 0. –î–û–ü–û–ú–Ü–ñ–ù–ê –§–£–ù–ö–¶–Ü–Ø: –û–¢–†–ò–ú–ê–ù–ù–Ø –ó–ê–ì–û–õ–û–í–ö–Ü–í –ó –ê–í–¢–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–Ñ–Æ
// -----------------------------------------------------------------
function getAuthHeaders() {
    const idToken = localStorage.getItem('idToken');
    if (!idToken) {
        // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω—É –Ω–µ–º–∞—î, –ª–æ–≥—ñ–∫–∞ DOMContentLoaded –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        // –ú–∏ –≤—Å–µ –æ–¥–Ω–æ –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± –∑—É–ø–∏–Ω–∏—Ç–∏ –∑–∞–ø–∏—Ç fetch
        throw new Error("–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∏–π —Ç–æ–∫–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ."); 
    }
    
    return { 
        'Content-Type': 'application/json',
        'Authorization': idToken // <-- –û–°–ù–û–í–ù–ê –ó–ú–Ü–ù–ê: –î–æ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω Cognito
    };
}


// -----------------------------------------------------------------
// 1. –§–£–ù–ö–¶–Ü–Ø: –û–¢–†–ò–ú–ê–ù–ù–Ø –¢–ê –í–Ü–î–û–ë–†–ê–ñ–ï–ù–ù–Ø –î–ê–ù–ò–• (GET)
// -----------------------------------------------------------------
async function loadEvents() {
    console.log("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...");
    
    if (!EVENT_LIST_CONTAINER) {
        console.error("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ø–∏—Å–∫—É –ø–æ–¥—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (ID: event-list-container).");
        return;
    }

    const headerRow = EVENT_LIST_CONTAINER.querySelector('.header-row') ? EVENT_LIST_CONTAINER.querySelector('.header-row').outerHTML : '';
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    EVENT_LIST_CONTAINER.innerHTML = headerRow + '<div id="loading-indicator" class="table-row data-row"><div class="cell event-name-col" style="grid-column: 1 / span 4;">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div></div>';

    try {
        const headers = getAuthHeaders(); // <-- –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–ú–û –ê–í–¢–û–†–ò–ó–ê–¶–Ü–Æ
        
        const response = await fetch(API_ENDPOINT, {
            method: 'GET',
            headers: headers,
        });

        if (!response.ok) {
            // –ü—Ä–∏ 401/403 (Unauthorized/Forbidden) –æ—á–∏—Å—Ç–∏–º–æ —Ç–æ–∫–µ–Ω —ñ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏–º–æ
            if (response.status === 401 || response.status === 403) {
                localStorage.removeItem('idToken');
                window.location.href = '/Brain-2.1/'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –ª–æ–≥—ñ–Ω
                return;
            }
            throw new Error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö: ${response.status} ${response.statusText}`);
        }

        let events = await response.json();
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –ø–∞—Ä—Å–∏–Ω–≥ (—è–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä—è–¥–∫–æ–º, —Ö–æ—á–∞ –º–∞—î –±—É—Ç–∏ –æ–±'—î–∫—Ç–æ–º)
        if (typeof events === 'string') {
            try { events = JSON.parse(events); } catch (e) { events = []; }
        }
        if (!Array.isArray(events)) { events = []; }
        
        // –°–û–†–¢–£–í–ê–ù–ù–Ø: –ù–∞–π–Ω–æ–≤—ñ—à—ñ –ø–µ—Ä—à—ñ
        events.sort((a, b) => new Date(b.created_date) - new Date(a.created_date));

        // –û—á–∏—â–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        EVENT_LIST_CONTAINER.innerHTML = headerRow; 

        if (events.length === 0) {
            EVENT_LIST_CONTAINER.innerHTML += '<div class="table-row data-row"><div class="cell event-name-col" style="grid-column: 1 / span 4;">–ñ–æ–¥–Ω–æ—ó –ø–æ–¥—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</div></div>';
            return;
        }

        events.forEach(event => {
            // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏
            const formatOptions = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
            const createdDate = new Date(event.created_date).toLocaleString('uk-UA', formatOptions);
            const lastUpdate = event.last_update ? new Date(event.last_update).toLocaleString('uk-UA', formatOptions) : createdDate;
            
            const row = document.createElement('div');
            row.className = 'table-row data-row clickable-row';
            row.style.cursor = 'pointer';
            
            // Add click handler to open game in new tab with event data
            row.onclick = (e) => {
                // Prevent click when clicking on delete button
                if (e.target.classList.contains('action-btn') || e.target.closest('.action-btn')) {
                    return;
                }
                // Store event data in sessionStorage for the game page to access
                sessionStorage.setItem('selectedEvent', JSON.stringify({
                    id: event.id,
                    name: event.name,
                    link_to_csv: event.link_to_csv,
                    link_to_json: event.link_to_json,
                    created_date: event.created_date,
                    last_update: event.last_update
                }));
                // Open game page in new tab (–ü–†–ò–ü–£–©–ï–ù–ù–Ø: '/game' —ñ—Å–Ω—É—î)
                window.open('/Brain-2.1/game', '_blank');
            };

            row.innerHTML = `
                <div class="cell event-name-col">${event.name || 'N/A'}</div>
                <div class="cell created-col">${createdDate}</div>
                <div class="cell modified-col">${lastUpdate}</div>
                <div class="cell actions-col delete-action">
                    <button class="action-btn delete-btn" onclick="handleDeleteEvent('${event.id}', '${(event.name || 'N/A').replace(/'/g, "\\'")}')">üóëÔ∏è</button>
                </div>
            `;
            
            EVENT_LIST_CONTAINER.appendChild(row);
        });

    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–≤–µ–Ω—Ç—ñ–≤:", error);
        // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–º–∏–ª–∫—É –æ–±—Ä–æ–±–ª—è—î DOMContentLoaded.
        // –Ø–∫—â–æ —ñ–Ω—à–∞ –ø–æ–º–∏–ª–∫–∞:
        if (error.message.includes("–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∏–π —Ç–æ–∫–µ–Ω")) return;
        EVENT_LIST_CONTAINER.innerHTML = headerRow + `<div class="table-row data-row"><div class="cell event-name-col" style="grid-column: 1 / span 4;">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${error.message}</div></div>`;
    }
}


// -----------------------------------------------------------------
// 2. –§–£–ù–ö–¶–Ü–Ø: –í–ò–î–ê–õ–ï–ù–ù–Ø –ï–õ–ï–ú–ï–ù–¢–ê (DELETE)
// -----------------------------------------------------------------
window.handleDeleteEvent = async function(id, name) {
    if (!confirm(`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é "${name}" (ID: ${id})? –¶–µ —Ç–∞–∫–æ–∂ –≤–∏–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª–∏ –≤ S3.`)) { return; }
    
    try {
        const headers = getAuthHeaders(); // <-- –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–ú–û –ê–í–¢–û–†–ò–ó–ê–¶–Ü–Æ
        
        // –ó–∞–ø–∏—Ç DELETE –Ω–∞ endpoint: /events/{id}
        const url = `${API_ENDPOINT}/${id}`;
        const response = await fetch(url, { 
            method: 'DELETE',
            headers: headers // <-- –î–û–î–ê–ù–û: –ó–∞–≥–æ–ª–æ–≤–∫–∏
        });

        if (!response.ok) { 
            if (response.status === 401 || response.status === 403) {
                localStorage.removeItem('idToken');
                window.location.href = '/Brain-2.1/';
                return;
            }
            throw new Error(`–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`); 
        }
        
        alert(`–ü–æ–¥—ñ—é "${name}" —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.`);
        loadEvents(); // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è

    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ–≤–µ–Ω—Ç—É:", error);
        alert(`–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é: ${error.message}.`);
    }
}


// -----------------------------------------------------------------
// 3. –§–£–ù–ö–¶–Ü–Ø: –°–¢–í–û–†–ï–ù–ù–Ø –ù–û–í–û–ì–û –ï–õ–ï–ú–ï–ù–¢–ê (POST)
// -----------------------------------------------------------------
if (CREATE_EVENT_FORM) {
    CREATE_EVENT_FORM.onsubmit = async (event) => {
        event.preventDefault();
        
        const eventName = EVENT_NAME_INPUT.value.trim();
        if (!eventName) { alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø–æ–¥—ñ—ó."); return; }

        try {
            const headers = getAuthHeaders(); // <-- –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–ú–û –ê–í–¢–û–†–ò–ó–ê–¶–Ü–Æ

            const response = await fetch(API_ENDPOINT, {
                method: 'POST',
                headers: headers, // <-- –î–û–î–ê–ù–û: –ó–∞–≥–æ–ª–æ–≤–∫–∏
                body: JSON.stringify({ name: eventName }),
            });

            if (!response.ok) { 
                if (response.status === 401 || response.status === 403) {
                    localStorage.removeItem('idToken');
                    window.location.href = '/Brain-2.1/';
                    return;
                }
                throw new Error(`–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`); 
            }
            
            EVENT_NAME_INPUT.value = ''; 
            loadEvents(); 

        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–≤–µ–Ω—Ç—É:", error);
            alert(`–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–≤–µ–Ω—Ç—É: ${error.message}`);
        }
    };
}


// -----------------------------------------------------------------
// 4. –§–£–ù–ö–¶–Ü–Ø –í–ò–•–û–î–£ –ó –°–ò–°–¢–ï–ú–ò
// -----------------------------------------------------------------
window.signOut = function() {
    if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –∑ —Å–∏—Å—Ç–µ–º–∏?')) {
        // –û—á–∏—â–∞—î–º–æ —Ç–æ–∫–µ–Ω
        localStorage.removeItem('idToken');
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        window.location.href = '/Brain-2.1/';
    }
};

// -----------------------------------------------------------------
// 5. –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ó –ü–ï–†–ï–í–Ü–†–ö–û–Æ –ê–í–¢–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–á
// -----------------------------------------------------------------
document.addEventListener('DOMContentLoaded', () => {
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω—É Cognito –≤ localStorage
    const idToken = localStorage.getItem('idToken');
    
    if (!idToken) {
        console.log("–¢–æ–∫–µ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ª–æ–≥—ñ–Ω—É.");
        // –Ø–∫—â–æ —Ç–æ–∫–µ–Ω—É –Ω–µ–º–∞—î, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ª–æ–≥—ñ–Ω—É
        window.location.href = '/Brain-2.1/'; // <-- –û–°–ù–û–í–ù–ê –ó–ú–Ü–ù–ê: –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
        return; 
    }
    
    // 2. –Ø–∫—â–æ —Ç–æ–∫–µ–Ω —î, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
    loadEvents();
});